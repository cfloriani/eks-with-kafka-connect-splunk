import json
import time
import random
from kafka import KafkaProducer
from faker import Faker

# Configuração do Faker para gerar dados fictícios
fake = Faker()

# Função para gerar eventos fictícios de um firewall Cisco
def generate_cisco_firewall_event():
    event = {
        "timestamp": fake.iso8601(),
        "source_ip": fake.ipv4(),
        "destination_ip": fake.ipv4(),
        "source_port": random.randint(1024, 65535),
        "destination_port": random.choice([80, 443, 22, 21, 8080]),
        "protocol": random.choice(["TCP", "UDP", "ICMP"]),
        "action": random.choice(["allowed", "blocked"]),
        "message": "Generated by Cisco Firewall",
        "device_name": fake.hostname()
    }
    return event

# Configuração do KafkaProducer
producer = KafkaProducer(
    bootstrap_servers=['localhost:9092'],
    value_serializer=lambda v: json.dumps(v).encode('utf-8')
)

# Nome do tópico Kafka
topic_name = 'firewall'

try:
    while True:
        # Gerar um evento fictício
        event = generate_cisco_firewall_event()
        print(f"Sending event: {event}")

        # Enviar o evento para o tópico Kafka
        producer.send(topic_name, event)
        
        # Forçar o envio do evento
        producer.flush()

        # Aguardar alguns segundos antes de enviar o próximo evento
        time.sleep(random.uniform(0.1, 1.0))

except KeyboardInterrupt:
    print("Stopping the event generation.")

finally:
    # Fechar o produtor Kafka
    producer.close()
